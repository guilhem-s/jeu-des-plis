{"ast":null,"code":"var _jsxFileName = \"/home/guilhem/Git/jeu-des-plis/src/components/PlayerHand/PlayerHand.jsx\",\n  _s = $RefreshSig$();\n// PlayerHand.js\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Card/Card';\nimport './PlayerHand.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerHand({\n  hand,\n  onPlayCard,\n  isCurrentPlayer,\n  isLocalPlayer,\n  atout,\n  demandedCouleur\n}) {\n  _s();\n  const [playableCards, setPlayableCards] = useState([]);\n\n  // Détermine quelles cartes sont jouables\n  useEffect(() => {\n    const determinePlayableCards = () => {\n      if (!isCurrentPlayer || !isLocalPlayer) {\n        return hand.map(() => false); // Pas le tour du joueur\n      }\n      if (!demandedCouleur) {\n        return hand.map(() => true);\n      }\n      const hasDemandedCouleur = hand.some(card => card.couleur === demandedCouleur);\n      return hand.map(card => {\n        if (hasDemandedCouleur) {\n          return card.couleur === demandedCouleur;\n        }\n        const hasAtout = hand.some(c => c.couleur === atout);\n        if (hasAtout) {\n          return card.couleur === atout;\n        }\n        return true;\n      });\n    };\n    setPlayableCards(determinePlayableCards());\n  }, [hand, isCurrentPlayer, isLocalPlayer, atout, demandedCouleur]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `player-hand ${isLocalPlayer ? 'current-player' : 'other-player'}`,\n    children: hand.map((card, index) => {\n      const isPlayable = isCurrentPlayer && playableCards[index];\n      const isGrayed = isCurrentPlayer && !playableCards[index];\n      return /*#__PURE__*/_jsxDEV(Card, {\n        card: card,\n        isPlayable: isPlayable,\n        isGrayed: isGrayed,\n        onClick: isPlayable ? onPlayCard : null\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerHand, \"qPKILDaVULd96vVqwto5lWTSPRU=\");\n_c = PlayerHand;\nexport default PlayerHand;\nvar _c;\n$RefreshReg$(_c, \"PlayerHand\");","map":{"version":3,"names":["React","useEffect","useState","Card","jsxDEV","_jsxDEV","PlayerHand","hand","onPlayCard","isCurrentPlayer","isLocalPlayer","atout","demandedCouleur","_s","playableCards","setPlayableCards","determinePlayableCards","map","hasDemandedCouleur","some","card","couleur","hasAtout","c","className","children","index","isPlayable","isGrayed","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/guilhem/Git/jeu-des-plis/src/components/PlayerHand/PlayerHand.jsx"],"sourcesContent":["// PlayerHand.js\nimport React, { useEffect, useState } from 'react';\nimport Card from '../Card/Card';\nimport './PlayerHand.css';\n\nfunction PlayerHand({ hand, onPlayCard, isCurrentPlayer, isLocalPlayer, atout, demandedCouleur }) {\n  const [playableCards, setPlayableCards] = useState([]);\n\n  // Détermine quelles cartes sont jouables\n  useEffect(() => {\n    const determinePlayableCards = () => {\n      if (!isCurrentPlayer || !isLocalPlayer) {\n        return hand.map(() => false); // Pas le tour du joueur\n      }\n\n      if (!demandedCouleur) {\n        return hand.map(() => true);\n      }\n\n      const hasDemandedCouleur = hand.some((card) => card.couleur === demandedCouleur);\n\n      return hand.map((card) => {\n        if (hasDemandedCouleur) {\n          return card.couleur === demandedCouleur;\n        }\n\n        const hasAtout = hand.some((c) => c.couleur === atout);\n        if (hasAtout) {\n          return card.couleur === atout;\n        }\n\n        return true;\n      });\n    };\n\n    setPlayableCards(determinePlayableCards());\n  }, [hand, isCurrentPlayer, isLocalPlayer, atout, demandedCouleur]);\n\n  return (\n    <div className={`player-hand ${isLocalPlayer ? 'current-player' : 'other-player'}`}>\n      {hand.map((card, index) => {\n        const isPlayable = isCurrentPlayer && playableCards[index];\n        const isGrayed = isCurrentPlayer && !playableCards[index];\n\n        return (\n          <Card\n            key={index}\n            card={card}\n            isPlayable={isPlayable}\n            isGrayed={isGrayed}\n            onClick={isPlayable ? onPlayCard : null}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default PlayerHand;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC,eAAe;EAAEC,aAAa;EAAEC,KAAK;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAChG,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMe,sBAAsB,GAAGA,CAAA,KAAM;MACnC,IAAI,CAACP,eAAe,IAAI,CAACC,aAAa,EAAE;QACtC,OAAOH,IAAI,CAACU,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;MAChC;MAEA,IAAI,CAACL,eAAe,EAAE;QACpB,OAAOL,IAAI,CAACU,GAAG,CAAC,MAAM,IAAI,CAAC;MAC7B;MAEA,MAAMC,kBAAkB,GAAGX,IAAI,CAACY,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAKT,eAAe,CAAC;MAEhF,OAAOL,IAAI,CAACU,GAAG,CAAEG,IAAI,IAAK;QACxB,IAAIF,kBAAkB,EAAE;UACtB,OAAOE,IAAI,CAACC,OAAO,KAAKT,eAAe;QACzC;QAEA,MAAMU,QAAQ,GAAGf,IAAI,CAACY,IAAI,CAAEI,CAAC,IAAKA,CAAC,CAACF,OAAO,KAAKV,KAAK,CAAC;QACtD,IAAIW,QAAQ,EAAE;UACZ,OAAOF,IAAI,CAACC,OAAO,KAAKV,KAAK;QAC/B;QAEA,OAAO,IAAI;MACb,CAAC,CAAC;IACJ,CAAC;IAEDI,gBAAgB,CAACC,sBAAsB,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACT,IAAI,EAAEE,eAAe,EAAEC,aAAa,EAAEC,KAAK,EAAEC,eAAe,CAAC,CAAC;EAElE,oBACEP,OAAA;IAAKmB,SAAS,EAAE,eAAed,aAAa,GAAG,gBAAgB,GAAG,cAAc,EAAG;IAAAe,QAAA,EAChFlB,IAAI,CAACU,GAAG,CAAC,CAACG,IAAI,EAAEM,KAAK,KAAK;MACzB,MAAMC,UAAU,GAAGlB,eAAe,IAAIK,aAAa,CAACY,KAAK,CAAC;MAC1D,MAAME,QAAQ,GAAGnB,eAAe,IAAI,CAACK,aAAa,CAACY,KAAK,CAAC;MAEzD,oBACErB,OAAA,CAACF,IAAI;QAEHiB,IAAI,EAAEA,IAAK;QACXO,UAAU,EAAEA,UAAW;QACvBC,QAAQ,EAAEA,QAAS;QACnBC,OAAO,EAAEF,UAAU,GAAGnB,UAAU,GAAG;MAAK,GAJnCkB,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACpB,EAAA,CAnDQP,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAqDnB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}